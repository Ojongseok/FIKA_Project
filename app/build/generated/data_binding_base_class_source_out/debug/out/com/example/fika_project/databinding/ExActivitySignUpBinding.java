// Generated by view binder compiler. Do not edit!
package com.example.fika_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fika_project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ExActivitySignUpBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView emailEditTextUsable;

  @NonNull
  public final TextView nicknameEditTextUsable;

  @NonNull
  public final TextView passwordEditTextUsable;

  @NonNull
  public final TextView passwordReEditTextUsable;

  @NonNull
  public final EditText siginupEmailEditText;

  @NonNull
  public final EditText siginupNicknameEditText;

  @NonNull
  public final EditText siginupPasswordEditText;

  @NonNull
  public final EditText siginupPasswordReEditText;

  @NonNull
  public final ImageView signupBackButton;

  @NonNull
  public final LinearLayout signupEmailLayout;

  @NonNull
  public final LinearLayout signupNicknameLayout;

  @NonNull
  public final LinearLayout signupPasswordLayout;

  @NonNull
  public final LinearLayout signupPasswordReLayout;

  @NonNull
  public final TextView signupTitle;

  private ExActivitySignUpBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView emailEditTextUsable, @NonNull TextView nicknameEditTextUsable,
      @NonNull TextView passwordEditTextUsable, @NonNull TextView passwordReEditTextUsable,
      @NonNull EditText siginupEmailEditText, @NonNull EditText siginupNicknameEditText,
      @NonNull EditText siginupPasswordEditText, @NonNull EditText siginupPasswordReEditText,
      @NonNull ImageView signupBackButton, @NonNull LinearLayout signupEmailLayout,
      @NonNull LinearLayout signupNicknameLayout, @NonNull LinearLayout signupPasswordLayout,
      @NonNull LinearLayout signupPasswordReLayout, @NonNull TextView signupTitle) {
    this.rootView = rootView;
    this.emailEditTextUsable = emailEditTextUsable;
    this.nicknameEditTextUsable = nicknameEditTextUsable;
    this.passwordEditTextUsable = passwordEditTextUsable;
    this.passwordReEditTextUsable = passwordReEditTextUsable;
    this.siginupEmailEditText = siginupEmailEditText;
    this.siginupNicknameEditText = siginupNicknameEditText;
    this.siginupPasswordEditText = siginupPasswordEditText;
    this.siginupPasswordReEditText = siginupPasswordReEditText;
    this.signupBackButton = signupBackButton;
    this.signupEmailLayout = signupEmailLayout;
    this.signupNicknameLayout = signupNicknameLayout;
    this.signupPasswordLayout = signupPasswordLayout;
    this.signupPasswordReLayout = signupPasswordReLayout;
    this.signupTitle = signupTitle;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ExActivitySignUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ExActivitySignUpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.ex_activity_sign_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ExActivitySignUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.email_editText_usable;
      TextView emailEditTextUsable = ViewBindings.findChildViewById(rootView, id);
      if (emailEditTextUsable == null) {
        break missingId;
      }

      id = R.id.nickname_editText_usable;
      TextView nicknameEditTextUsable = ViewBindings.findChildViewById(rootView, id);
      if (nicknameEditTextUsable == null) {
        break missingId;
      }

      id = R.id.password_editText_usable;
      TextView passwordEditTextUsable = ViewBindings.findChildViewById(rootView, id);
      if (passwordEditTextUsable == null) {
        break missingId;
      }

      id = R.id.passwordRe_editText_usable;
      TextView passwordReEditTextUsable = ViewBindings.findChildViewById(rootView, id);
      if (passwordReEditTextUsable == null) {
        break missingId;
      }

      id = R.id.siginup_email_editText;
      EditText siginupEmailEditText = ViewBindings.findChildViewById(rootView, id);
      if (siginupEmailEditText == null) {
        break missingId;
      }

      id = R.id.siginup_nickname_editText;
      EditText siginupNicknameEditText = ViewBindings.findChildViewById(rootView, id);
      if (siginupNicknameEditText == null) {
        break missingId;
      }

      id = R.id.siginup_password_editText;
      EditText siginupPasswordEditText = ViewBindings.findChildViewById(rootView, id);
      if (siginupPasswordEditText == null) {
        break missingId;
      }

      id = R.id.siginup_passwordRe_editText;
      EditText siginupPasswordReEditText = ViewBindings.findChildViewById(rootView, id);
      if (siginupPasswordReEditText == null) {
        break missingId;
      }

      id = R.id.signup_back_button;
      ImageView signupBackButton = ViewBindings.findChildViewById(rootView, id);
      if (signupBackButton == null) {
        break missingId;
      }

      id = R.id.signup_email_layout;
      LinearLayout signupEmailLayout = ViewBindings.findChildViewById(rootView, id);
      if (signupEmailLayout == null) {
        break missingId;
      }

      id = R.id.signup_nickname_layout;
      LinearLayout signupNicknameLayout = ViewBindings.findChildViewById(rootView, id);
      if (signupNicknameLayout == null) {
        break missingId;
      }

      id = R.id.signup_password_layout;
      LinearLayout signupPasswordLayout = ViewBindings.findChildViewById(rootView, id);
      if (signupPasswordLayout == null) {
        break missingId;
      }

      id = R.id.signup_passwordRe_layout;
      LinearLayout signupPasswordReLayout = ViewBindings.findChildViewById(rootView, id);
      if (signupPasswordReLayout == null) {
        break missingId;
      }

      id = R.id.signup_title;
      TextView signupTitle = ViewBindings.findChildViewById(rootView, id);
      if (signupTitle == null) {
        break missingId;
      }

      return new ExActivitySignUpBinding((RelativeLayout) rootView, emailEditTextUsable,
          nicknameEditTextUsable, passwordEditTextUsable, passwordReEditTextUsable,
          siginupEmailEditText, siginupNicknameEditText, siginupPasswordEditText,
          siginupPasswordReEditText, signupBackButton, signupEmailLayout, signupNicknameLayout,
          signupPasswordLayout, signupPasswordReLayout, signupTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
