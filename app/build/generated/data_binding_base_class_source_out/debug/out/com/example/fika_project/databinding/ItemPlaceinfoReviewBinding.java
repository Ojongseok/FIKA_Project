// Generated by view binder compiler. Do not edit!
package com.example.fika_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fika_project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPlaceinfoReviewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout itemPlaceinfoReviewBottomImgLayout;

  @NonNull
  public final ConstraintLayout itemPlaceinfoReviewBottomLayout;

  @NonNull
  public final TextView itemPlaceinfoReviewContentsTv;

  @NonNull
  public final TextView itemPlaceinfoReviewDateTv;

  @NonNull
  public final ImageView itemPlaceinfoReviewImg01;

  @NonNull
  public final ImageView itemPlaceinfoReviewImg02;

  @NonNull
  public final ImageView itemPlaceinfoReviewImg03;

  @NonNull
  public final ImageView itemPlaceinfoReviewMoreIv;

  @NonNull
  public final TextView itemPlaceinfoReviewNameTv;

  @NonNull
  public final CardView itemPlaceinfoReviewProfileCv;

  @NonNull
  public final ImageView itemPlaceinfoReviewProfileIv;

  @NonNull
  public final ImageView itemPlaceinfoReviewStarTv;

  @NonNull
  public final ConstraintLayout itemPlaceinfoReviewTopLayout;

  private ItemPlaceinfoReviewBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout itemPlaceinfoReviewBottomImgLayout,
      @NonNull ConstraintLayout itemPlaceinfoReviewBottomLayout,
      @NonNull TextView itemPlaceinfoReviewContentsTv, @NonNull TextView itemPlaceinfoReviewDateTv,
      @NonNull ImageView itemPlaceinfoReviewImg01, @NonNull ImageView itemPlaceinfoReviewImg02,
      @NonNull ImageView itemPlaceinfoReviewImg03, @NonNull ImageView itemPlaceinfoReviewMoreIv,
      @NonNull TextView itemPlaceinfoReviewNameTv, @NonNull CardView itemPlaceinfoReviewProfileCv,
      @NonNull ImageView itemPlaceinfoReviewProfileIv, @NonNull ImageView itemPlaceinfoReviewStarTv,
      @NonNull ConstraintLayout itemPlaceinfoReviewTopLayout) {
    this.rootView = rootView;
    this.itemPlaceinfoReviewBottomImgLayout = itemPlaceinfoReviewBottomImgLayout;
    this.itemPlaceinfoReviewBottomLayout = itemPlaceinfoReviewBottomLayout;
    this.itemPlaceinfoReviewContentsTv = itemPlaceinfoReviewContentsTv;
    this.itemPlaceinfoReviewDateTv = itemPlaceinfoReviewDateTv;
    this.itemPlaceinfoReviewImg01 = itemPlaceinfoReviewImg01;
    this.itemPlaceinfoReviewImg02 = itemPlaceinfoReviewImg02;
    this.itemPlaceinfoReviewImg03 = itemPlaceinfoReviewImg03;
    this.itemPlaceinfoReviewMoreIv = itemPlaceinfoReviewMoreIv;
    this.itemPlaceinfoReviewNameTv = itemPlaceinfoReviewNameTv;
    this.itemPlaceinfoReviewProfileCv = itemPlaceinfoReviewProfileCv;
    this.itemPlaceinfoReviewProfileIv = itemPlaceinfoReviewProfileIv;
    this.itemPlaceinfoReviewStarTv = itemPlaceinfoReviewStarTv;
    this.itemPlaceinfoReviewTopLayout = itemPlaceinfoReviewTopLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPlaceinfoReviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPlaceinfoReviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_placeinfo_review, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPlaceinfoReviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.item_placeinfo_review_bottom_img_layout;
      LinearLayout itemPlaceinfoReviewBottomImgLayout = ViewBindings.findChildViewById(rootView, id);
      if (itemPlaceinfoReviewBottomImgLayout == null) {
        break missingId;
      }

      id = R.id.item_placeinfo_review_bottom_layout;
      ConstraintLayout itemPlaceinfoReviewBottomLayout = ViewBindings.findChildViewById(rootView, id);
      if (itemPlaceinfoReviewBottomLayout == null) {
        break missingId;
      }

      id = R.id.item_placeinfo_review_contents_tv;
      TextView itemPlaceinfoReviewContentsTv = ViewBindings.findChildViewById(rootView, id);
      if (itemPlaceinfoReviewContentsTv == null) {
        break missingId;
      }

      id = R.id.item_placeinfo_review_date_tv;
      TextView itemPlaceinfoReviewDateTv = ViewBindings.findChildViewById(rootView, id);
      if (itemPlaceinfoReviewDateTv == null) {
        break missingId;
      }

      id = R.id.item_placeinfo_review_img_01;
      ImageView itemPlaceinfoReviewImg01 = ViewBindings.findChildViewById(rootView, id);
      if (itemPlaceinfoReviewImg01 == null) {
        break missingId;
      }

      id = R.id.item_placeinfo_review_img_02;
      ImageView itemPlaceinfoReviewImg02 = ViewBindings.findChildViewById(rootView, id);
      if (itemPlaceinfoReviewImg02 == null) {
        break missingId;
      }

      id = R.id.item_placeinfo_review_img_03;
      ImageView itemPlaceinfoReviewImg03 = ViewBindings.findChildViewById(rootView, id);
      if (itemPlaceinfoReviewImg03 == null) {
        break missingId;
      }

      id = R.id.item_placeinfo_review_more_iv;
      ImageView itemPlaceinfoReviewMoreIv = ViewBindings.findChildViewById(rootView, id);
      if (itemPlaceinfoReviewMoreIv == null) {
        break missingId;
      }

      id = R.id.item_placeinfo_review_name_tv;
      TextView itemPlaceinfoReviewNameTv = ViewBindings.findChildViewById(rootView, id);
      if (itemPlaceinfoReviewNameTv == null) {
        break missingId;
      }

      id = R.id.item_placeinfo_review_profile_cv;
      CardView itemPlaceinfoReviewProfileCv = ViewBindings.findChildViewById(rootView, id);
      if (itemPlaceinfoReviewProfileCv == null) {
        break missingId;
      }

      id = R.id.item_placeinfo_review_profile_iv;
      ImageView itemPlaceinfoReviewProfileIv = ViewBindings.findChildViewById(rootView, id);
      if (itemPlaceinfoReviewProfileIv == null) {
        break missingId;
      }

      id = R.id.item_placeinfo_review_star_tv;
      ImageView itemPlaceinfoReviewStarTv = ViewBindings.findChildViewById(rootView, id);
      if (itemPlaceinfoReviewStarTv == null) {
        break missingId;
      }

      id = R.id.item_placeinfo_review_top_layout;
      ConstraintLayout itemPlaceinfoReviewTopLayout = ViewBindings.findChildViewById(rootView, id);
      if (itemPlaceinfoReviewTopLayout == null) {
        break missingId;
      }

      return new ItemPlaceinfoReviewBinding((ConstraintLayout) rootView,
          itemPlaceinfoReviewBottomImgLayout, itemPlaceinfoReviewBottomLayout,
          itemPlaceinfoReviewContentsTv, itemPlaceinfoReviewDateTv, itemPlaceinfoReviewImg01,
          itemPlaceinfoReviewImg02, itemPlaceinfoReviewImg03, itemPlaceinfoReviewMoreIv,
          itemPlaceinfoReviewNameTv, itemPlaceinfoReviewProfileCv, itemPlaceinfoReviewProfileIv,
          itemPlaceinfoReviewStarTv, itemPlaceinfoReviewTopLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
